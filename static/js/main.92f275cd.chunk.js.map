{"version":3,"sources":["components/Message/Message.js","components/Send/Send.js","components/Chat/socket.js","components/Chat/Chat.js","reportWebVitals.js","index.js"],"names":["Message","item","currentUser","classMessage","user","className","text","Send","this","props","onChange","onSend","value","onSubmit","type","Component","socket","io","process","Chat","state","messages","message","isLogin","users","changeMessage","event","setState","target","sendMessage","preventDefault","trim","length","emit","inputName","changeName","on","data","newMessages","shift","map","key","Object","values","el","i","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92f275cd.chunk.js","sourcesContent":["// import React from 'react'\r\nimport './Message.css'\r\n\r\nconst Message = ({ item, currentUser }) => {\r\n  const classMessage =\r\n    item.user === currentUser ? 'alert alert-primary' : 'alert alert-dark'\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"message-container\">\r\n        <span className={classMessage}>\r\n          {item.user}: {item.text}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Send extends Component {\r\n  render() {\r\n    const { onChange, onSend, value } = this.props\r\n    return (\r\n      <form className=\"input-group\" onSubmit={onSend}>\r\n        <input className=\"form-control\" value={value} onChange={onChange} />\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Отправить\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import io from 'socket.io-client'\r\nconst URL = process.env.REACT_APP_URL || 'localhost:5000'\r\n\r\nexport const socket = io(URL)\r\n","import React, { Component } from 'react'\r\nimport Message from '../Message'\r\nimport Send from '../Send'\r\nimport './Chat.css'\r\nimport { socket } from './socket'\r\n\r\nexport default class Chat extends Component {\r\n  socket = socket\r\n  state = {\r\n    currentUser: '',\r\n    messages: [],\r\n    message: '',\r\n    isLogin: false,\r\n    users: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.socket.on('message', (data) => {\r\n      if (this.state.isLogin) {\r\n        this.setState(({ messages }) => {\r\n          const newMessages = [...messages]\r\n          if (newMessages.length > 50) {\r\n            newMessages.shift()\r\n          }\r\n          return {\r\n            messages: [...newMessages, { user: data.user, text: data.message }],\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.socket.on('users', (data) => {\r\n      this.setState({ users: data })\r\n    })\r\n  }\r\n\r\n  changeMessage = (event) => {\r\n    this.setState({ message: event.target.value })\r\n  }\r\n\r\n  sendMessage = (event) => {\r\n    event.preventDefault()\r\n    const { currentUser, message } = this.state\r\n    if (message.trim().length) {\r\n      this.socket.emit('message', {\r\n        user: currentUser,\r\n        message: message.trim(),\r\n      })\r\n      this.setState({ message: '' })\r\n    }\r\n  }\r\n\r\n  inputName = () => {\r\n    const user = this.state.currentUser\r\n    if (user !== '') {\r\n      this.setState({ currentUser: user, isLogin: true })\r\n      this.socket.emit('change:name', user)\r\n    }\r\n  }\r\n\r\n  changeName = (event) => {\r\n    this.setState({ currentUser: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, isLogin, message, messages, users } = this.state\r\n    if (!isLogin) {\r\n      return (\r\n        <div className=\"login shadow-sm\">\r\n          <h4>Пожалуйста представьтесь</h4>\r\n          <input\r\n            className=\"form-control\"\r\n            value={currentUser}\r\n            onChange={this.changeName}\r\n            placeholder=\"Введите ваш никнейм\"\r\n          />\r\n          <button className=\"btn btn-primary\" onClick={this.inputName}>\r\n            Войти\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"message-list\">\r\n          <div className=\"messages\">\r\n            {messages.map((item, key) => (\r\n              <Message item={item} currentUser={currentUser} key={key} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <Send\r\n          value={message}\r\n          onChange={this.changeMessage}\r\n          onSend={this.sendMessage}\r\n        />\r\n        <ul className=\"list-group\">\r\n          {Object.values(users).map((el, i) => (\r\n            <li className=\"list-group-item\" key={i}>\r\n              {el}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chat from './components/Chat';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}